@{
    ViewBag.Title = "Interest";
}
<h2>@ViewBag.Title.</h2>
<h3>@ViewBag.Message</h3>

<script>
    let rows = 1;
    const debtDateStringId = 'dateOfDebt';

    $(function () {
        initializeDateTime(debtDateStringId);
        initializeDateTime('dateOfCalculation');
    });

    function initializeDateTime(id) {
        $('#' + id).datetimepicker({
            format: 'DD/MM/YYYY'
        });
    }

    function stringToDate(dateString) {
        dateString = dateString.split('/');
        dateString = dateString[1] + '/' + dateString[0] + '/' + dateString[2];

        return new Date(dateString);
    }

    function calculate() {
        $.ajax({
            type: 'GET',
            data: {
                debt: $('#txtDebt').val(),
                //debtDate: stringToDate($('#dateOfDebtValue').val()),
                debtDate: $('#dateOfDebtValue').val(),
                //calculationDate: stringToDate($('#dateOfCalculationValue').val())
                calculationDate: $('#dateOfCalculationValue').val()
            },
            url: "/api/Interest",
            contentType: "application/json",
            success: function (result) {
                $('#debt').text('worth now: ' + result);
            },
            error: function (err) {
                var status = err.statusCode().status;

                if (status == 400) {
                    alert('Invalid input');
                } else {
                    alert('Something went wrong');
                }
            }
        });
    }

    function addRow() {
        // Copy the table row and clear the value of the input, then append the row to the end of the table
        var debtRow = $("#debtRow").clone();
                
        // Clear all inputs and update id
        debtRow.find("input").each(function () {
            $(this).val('');
            $(this).attr('id', $(this)[0].id + rows);
        })
            
        debtRow.find('#' + debtDateStringId).attr('id', debtDateStringId + rows)
        debtRow.attr('id', debtRow[0].id + rows);
        debtRow.appendTo("#debts");

        initializeDateTime(debtDateStringId + rows);
        rows++;
    }
</script>

<div>
    <div class="container">
        <div class="row">
            <div class="col-sm-6 form-group">
                <label for="dateOfCalculation">Date to calculate for</label>
                <div class='input-group date' id='dateOfCalculation' style="width: 315px;">
                    <input type='text' id='dateOfCalculationValue' class="form-control" />
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
            </div>
            <div class="col-sm-6">
                <br/>
                <button class="btn btn-success glyphicon glyphicon-plus" onclick="addRow()"></button>
            </div>
        </div>

        <div id="debts">
            <div class="row" id="debtRow">
                <div class="col-sm-6 form-group">
                    <label for="dateOfDebt">Date of debt</label>
                    <div class='input-group date' id='dateOfDebt' style="width: 315px;">
                        <input type='text' id='dateOfDebtValue' class="form-control" />
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                </div>
                <div class="col-sm-6 form-group">
                    <label for="txtDebt">Debt</label>
                    <input type="text" class="form-control" id="txtDebt" value="" />
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-6 form-group">
                <button class="btn btn-primary" id="submit" name="submit" onclick="calculate()">Calculate</button>
            </div>
        </div>
        <br /><br />
        <label id="debt"></label>
    </div>
</div>