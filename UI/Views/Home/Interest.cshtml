@{
    ViewBag.Title = "Interest";
}
<h2>@ViewBag.Title.</h2>
<h3>@ViewBag.Message</h3>

<script>
    let rows = 1;
    let debts = {};
    const calculationDateId = 'dateOfCalculationValue';

    const dateOfDebtStringId = 'dateOfDebt';
    const dateOfDebtValueId = 'dateOfDebtValue';

    const txtDebtStringId = 'txtDebt';
    const txtDebtValueId = 'txtDebtValue';

    $(function () {
        initializeDateTime(dateOfDebtStringId);
        initializeDateTime('dateOfCalculation');
    });

    function initializeDateTime(id) {
        $('#' + id).datetimepicker({
            format: 'DD/MM/YYYY'
        });
    }

    function calculate() {
        prepareDataForRequest();
        data = JSON.stringify({
            calculationDate: $('#' + calculationDateId).val(),
            debts: debts
        });

        if (validateAllInputs && validateInputById(calculationDateId)) {
            $.ajax({
                type: 'POST',
                data: data,
                url: "/api/Interest",
                contentType: "application/json",
                dataType: 'json',
                success: function (result) {
                    $('#debt').text('worth now: ' + result);
                },
                error: function (err) {
                    handleError(err);
                }
            });
        }
    }

    function handleError(err) {
        var status = err.statusCode().status;

        if (status == 400) {
            alert('Invalid input');
        } else {
            alert('Something went wrong');
        }
    }

    function addRow() {
        if (validateAllInputs()) {
            // Copy the first debt row
            var debtRow = $("#debtRow").clone();

            // Clear all inputs and update id
            debtRow.find("input").each(function () {
                $(this).val('');
                $(this).attr('id', $(this)[0].id + rows);
            })

            debtRow.find('#' + dateOfDebtStringId).attr('id', dateOfDebtStringId + rows)
            debtRow.attr('id', debtRow[0].id + rows);

            debtRow.find('#' + txtDebtStringId).attr('id', txtDebtStringId + rows)
            debtRow.attr('id', debtRow[0].id + rows);

            debtRow.appendTo("#debts");

            initializeDateTime(dateOfDebtStringId + rows);

            rows++;
        }
    }

    function prepareDataForRequest() {
        addCalculation(null);

        for (let i = 1; i < rows; i++) {
            addCalculation(i);
        }
    }

    function addCalculation(index) {
        if (index === null) {
            debts[$('#' + dateOfDebtValueId).val()] = $('#' + txtDebtValueId).val();
        } else {
            debts[$('#' + dateOfDebtValueId + index).val()] = $('#' + txtDebtValueId + index).val();
        }
    }

    function validate(id) {
        validateInputById(id, id.replace('Value', ''));
    }

    function validateInputById(inputId, inputDivId) {
        if (document.getElementById(inputId).validity.valid) {
            $('#' + inputDivId).removeClass('has-error');
            return true;
        } else {
            $('#' + inputDivId).addClass('has-error');
            return false;
        }
    }

    function validateAllInputs() {
        if (!validateInputById(dateOfDebtValueId, dateOfDebtStringId) || !validateInputById(txtDebtValueId, txtDebtStringId)) {
            return false;
        }

        for (let i = 1; i < rows; i++) {
            if (!validateInputById(dateOfDebtValueId + i, dateOfDebtStringId + i) || !validateInputById(txtDebtValueId + i, txtDebtStringId + i)) {
                return false;
            }
        }

        return true;
    }
</script>

<div>
    <div class="container" data-toggle="validator" role="form">
        <div class="row">
            <div class="col-sm-6 form-group">
                <label for="dateOfCalculation">Date to calculate for</label>
                <div class='input-group date' id='dateOfCalculation' style="width: 315px;">
                    <input type='text' id='dateOfCalculationValue' class="form-control" required />
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
            </div>
            <div class="col-sm-6">
                <br />
                <button class="btn btn-success glyphicon glyphicon-plus" onclick="addRow()"></button>
            </div>
        </div>

        <div id="debts">
            <div class="row" id="debtRow">
                <div class="col-sm-6 form-group">
                    <label for="dateOfDebt">Date of debt</label>
                    <div class='input-group date' id='dateOfDebt' style="width: 315px;">
                        <input type='text' id='dateOfDebtValue' onchange="validate(this.id)" class="form-control" required />
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                </div>
                <div class="col-sm-6 form-group">
                    <label for="txtDebt">Debt</label>
                    <div class='input-group' id='txtDebt'>
                        <input type="number" step="any" onchange="validate(this.id)" class="form-control" id="txtDebtValue" value="" required />
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-6 form-group">
                <button class="btn btn-primary" id="submit" name="submit" onclick="calculate()">Calculate</button>
            </div>
        </div>
        <br /><br />
        <label id="debt"></label>
    </div>
</div>